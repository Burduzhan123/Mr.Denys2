var num = 'number' + 23 + 32
console.log(num) /* будет number2332 Система считывает данную сменную как предложение из-за кавычек в начале и не выполняет математичское действие */
var num = 41 + 1 + 'number'
console.log(num) //тут будет считать 41+1=42(из-за отсутсвия ковычек в начале) и допишет 'number' по аналогии с первым.Будет 42Number//
var num = null + 1
console.log(num) //Будет 1 из-за того, что ноль у нас - пустота и отсутствие//
var num = 'five' + + 'two'
console.log(num) //Ответ fiveNaN . пять он чиатет как строку из-за кавычек, онарный плюс перед двойкой переводит 'two' в число, но так как там числа система не видит, то выдаст not a number.//
var num = 2 && 7
console.log(num) //Ответ 7 из-за того, что оба значения больше 0 , то есть - тру. И оно выдает правое от символа значение. Если бы были паралельные палочки выбрало бы левое(при двух тру)//
var num = +'40' + +'2'
console.log(num) //Ответ 42. Опять же онарные плюсы , превращают строку в число и система уже вычисляет по арифметическому принципу.//
console.log('10' - 5 === 6) //Будет false из-за строгого сравнения(три знака равно) фолс из-за непраильного типа данных, которые три знака равно, тоже проверяют, а именно '10' в кавчках.
var num = true + false
console.log(num) //Ответ 1 из-за того, что тру у нас не может ровняться 0, по умолчанию система выбрала 1, а фолс у нас всегда ноль.//
var num = '4px' - 3
console.log(num) //ответ NaN. с минусом, оно будет выполнять арифметическое действие, в данном случае система не видит числом 4px.//
console.log('4' - 3) //Ответ 1 из-за минуса будет выполняться арифметическое действие.//
console.log('2' + 3 ** 2)//Ответ 29 из-за двух знаков умножения 3 на 3(три в квадрате) = 9 , а там два в кавычках как предложение //
console.log(12 / '6')//Ответ 2 в данном случае оно 6 не читает как предложение, деление система воспринимает как арифметиский оперант.//
console.log(23 + 42 + 'number')//Ответ 65number из-за отсутсвия кавычек на числах в начале, воспринамает как арифметический пример , а потом подставляет слово 'number' из-за кавычек. //
console.log('10' + (5 === 6))//Ответ 10false - оно вписывает '10' как предложение, предложение + строгое сравнение( 5 не равно 6 , сравнивает именно это из-за скобок) фолс//
console.log('number' + 15 + 3)//Ответ number153 из-за кавычек начале, видит как предложение, а не пример арифметики//
console.log(undefined + 1)//Ответ NaN хочет выполнить как арифметический пример, но из-за отсутсвующего значения в виде undefined , выдаст NaN.//
console.log('true' == true)//Ответ false из-за кавычек, воспринимает как предложение, оно не может быть в сравнении тру//
console.log(false == 'false')//Ответ false . по аналогии с 25//
console.log(null == '')//Ответ false , если значение ноль, фолс или пустота - то вернет фолс//
console.log(3 ** (9 / 3))//Ответ 27 чисто арифметический пример, первое действие деление в скобках, второе умножение 3 на 3 на 3 из-за двух знаков умножения, получается как в кубе.//
console.log(!!'false' == !!'true') //ответ True, ибо будет один и тот же тип данных//
console.log(0 || '0' && 1) //Ответ выберает 1(тру) в первом действии & из-за кавычек, и во втором  || выберет 1(тру)//
console.log(1 < 2 < 3)//Ответ true правильноe сравнение выдаст тру//
console.log('foo'+ + +'bar')//Ответ fooNaN - из-за кавычек в начале(будет как предложение) и потом онарный плюч превратит bar в кавычках в необозначенное число.//
console.log(3 ** 2 / 3)//Ответ 3 из-за первого дейсвия умножение (два знака, три в квадрате) и после этого 9 делим на 3.
console.log(1 < 2 > 3)//Ответ фолс, в сравнении не правильно 2 больше 3(должно быть меньше)
console.log((+null == false) < 1) //не понял//
console.log(false && true || true)//Ответ true. Перый оператор & выберает фолс, затем | выберет тру
console.log(false && (true || true))//Ответ false , из-за скобок тру(с двух сторон тру), и потом вне скобок фолс знак & выбирает фолс//
console.log((+null == false) < 1 ** 5)//ответ false//